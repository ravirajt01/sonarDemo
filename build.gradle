/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.5/userguide/java_library_plugin.html
 */


buildscript {
    repositories { 
      mavenCentral()
      mavenLocal()
    }
    dependencies { classpath 'org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.6.2' }
}


// Apply the java-library plugin to add support for Java Library
apply plugin: 'java-library'
apply plugin: 'org.sonarqube'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:21.0'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
    
   // classpath "org.sonarsource.scanner.gradle: sonarqube-gradle-plugin:2.5"
}


sonarqube {
	properties {
		property "sonar.host.url", "http://localhost:9000" //  url is your sonar server
		property "sonar.projectName", "project  display name"   //  this name will appear in dashboard
		property "sonar.projectKey", "projectKey" // It sould be a keybased on this report is created
		property "sonar.groovy.jacoco.reportPath", "${project.buildDir}/jacoco/test.exec"    
	}
}